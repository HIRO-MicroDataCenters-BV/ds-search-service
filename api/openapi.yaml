openapi: 3.1.0
info:
  title: Data Space Search Service
  description: The Search Service is a service of the Data Space Node, designed to
    process search queries and aggregate results from decentralized catalogs.
  contact:
    name: HIRO-MicroDataCenters
    email: all-hiro@hiro-microdatacenters.nl
  license:
    name: MIT
    url: https://github.com/HIRO-MicroDataCenters-BV/ds-search-service/blob/main/LICENSE
  version: 0.2.2
paths:
  /metrics:
    get:
      summary: Metrics
      description: Endpoint that serves Prometheus metrics.
      operationId: metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health-check:
    get:
      summary: Health check
      description: Returns a 200 status code if the service is up and running
      operationId: health_check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  /local-search/:
    post:
      tags:
      - Local Search
      summary: Search Local Catalog
      description: 'Search the local catalog with dataset list.


        The request accepts filters as a JSON-LD object in the body.


        ### Format:

        Filters are structured as nested JSON-LD objects. Each filter defines the
        path

        to the field with optional operators or language annotations.


        for details, check ds-catalog-service documentation.


        https://hiro-microdatacenters-bv.github.io/ds-catalog/docs/index.html#tag/Catalog/operation/get_catalog'
      operationId: local_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogFilters'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/ld+json:
              schema:
                type: string
              example:
                '@context':
                  '@vocab': http://data-space.org/
                  dcat: http://www.w3.org/ns/dcat#
                  dcterms: http://purl.org/dc/terms/
                '@type': Filters
                filters:
                - dcat:dataset:
                    dcterms:identifier: '123'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /distributed-search/:
    post:
      tags:
      - Decentralized Search
      summary: Decentralized Search Across Catalogs
      description: 'Search the across catalogs with dataset list.


        The request accepts filters as a JSON-LD object in the body.


        ### Format:

        Filters are structured as nested JSON-LD objects. Each filter defines the
        path

        to the field with optional operators or language annotations.


        for details, check ds-catalog-service documentation.

        https://hiro-microdatacenters-bv.github.io/ds-catalog/docs/index.html'
      operationId: distributed_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogFilters'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/ld+json:
              schema:
                type: string
              example:
                '@context':
                  '@vocab': http://data-space.org/
                  xsd: http://www.w3.org/2001/XMLSchema#
                  dcat: http://www.w3.org/ns/dcat#
                  dcatap: http://data.europa.eu/r5r/
                  dcterms: http://purl.org/dc/terms/
                  spdx: http://spdx.org/rdf/terms#
                  foaf: http://xmlns.com/foaf/0.1/
                  skos: http://www.w3.org/2004/02/skos/core#
                '@graph':
                - '@id': https://example.com/catalog/123
                  '@type': dcat:Catalog
                  dcterms:title:
                    '@language': en
                    '@value': Sample Catalog
                  dcterms:description:
                    '@language': en
                    '@value': This is a sample catalog containing various datasets
                      and services.
                  dcterms:publisher:
                    '@id': https://example.com/person/123
                    '@type': foaf:Agent
                    foaf:name: John Doe
                  dcat:dataset:
                  - '@id': https://example.com/dataset/789
                    '@type': dcat:Dataset
                    any_key: any_value
                - '@id': https://example.com/catalog/456
                  '@type': dcat:Catalog
                  dcterms:title:
                    '@language': en
                    '@value': Another Catalog
                  dcterms:description:
                    '@language': en
                    '@value': This is another sample catalog.
                  dcterms:publisher:
                    '@id': https://example.com/person/456
                    '@type': foaf:Agent
                    foaf:name: Jane Smith
                  dcat:dataset:
                  - '@id': https://example.com/dataset/789
                    '@type': dcat:Dataset
                    any_key: any_value
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    CatalogFilters:
      properties: {}
      additionalProperties: true
      type: object
      title: CatalogFilters
      examples:
      - '@context':
          '@vocab': http://data-space.org/
          dcat: http://www.w3.org/ns/dcat#
          dcterms: http://purl.org/dc/terms/
        '@type': Filters
        filters:
        - dcat:dataset:
            dcterms:identifier: '123'
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheck:
      properties:
        status:
          type: string
          title: Status
          examples:
          - OK
      type: object
      required:
      - status
      title: HealthCheck
      description: Health check response model
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
